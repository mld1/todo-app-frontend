{"version":3,"sources":["task.js","addTask.js","outstandingTasks.js","dropdown.js","App.js","index.js"],"names":["Task","updateTasks","task","tasksCopy","state","completedTasks","slice","push","setState","handleDelete","e","props","deleteTaskFunc","id","handleComplete","completedTaskFunc","handleUndo","undoTaskFunc","className","this","completed","moment","dueBy","isAfter","text","type","onClick","date","format","fromNow","React","Component","AddTask","newTaskText","dateSelected","showModal","updateTaskText","event","target","value","handleClick","addTaskFunc","handleModalDismiss","handleDateChange","tabIndex","role","data-dismiss","aria-label","aria-hidden","aria-describedby","placeholder","onChange","OutstandingTasks","count","Dropdown","showDropdown","handleSortMenu","handleSortOption","option","sortByFunc","message","sortOption","data-toggle","aria-haspopup","aria-expanded","href","App","tasks","incompleteSortOption","addTask","taskText","dueByDate","newTask","Completed","DateCreated","DateDue","Text","UserId","console","log","axios","post","then","response","taskFromDB","data","catch","err","deleteTask","delete","tasksNotDel","filter","TaskID","birthdays","editTask","editedTask","put","updatedtasks","map","completeTask","updatedTasks","undoTask","countTasksCompleted","sortBy","sort","a","b","get","tasksFromDB","incompleteTasks","length","duration","easing","enterAnimation","from","transform","opacity","to","leaveAnimation","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c71f4c60.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./task.css\";\nimport moment from \"moment\";\n\nclass Task extends React.Component {\n  updateTasks = task => {\n    const tasksCopy = this.state.completedTasks.slice();\n    tasksCopy.push(task);\n    this.setState({\n      completedTasks: tasksCopy\n    });\n  };\n  handleDelete = e => {\n    this.props.deleteTaskFunc(this.props.id);\n  };\n\n  handleComplete = e => {\n    this.props.completedTaskFunc(this.props.id);\n  };\n\n  handleUndo = e => {\n    this.props.undoTaskFunc(this.props.id);\n  };\n\n  // toggleSortByDate = e => {};\n\n  render() {\n    return (\n      <div\n        className={\n          this.props.completed\n            ? \"completed row p-2 rowmargin\"\n            : \"row p-2 grey rowmargin\"\n        }\n      >\n        <div\n          className={\n            moment(this.props.dueBy).isAfter(moment())\n              ? \"col-4\"\n              : \"col-4 redText\"\n          }\n        >\n          <strong> {this.props.text}</strong>\n        </div>\n\n        <div className=\"col-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={this.handleDelete}\n          >\n            <i className=\"fa fa-trash\"></i>\n          </button>\n        </div>\n        <div className=\"col-2\">\n          <button type=\"button\" className=\"btn btn-dark\">\n            {this.props.completed ? (\n              <i className=\"fa fa-undo\" onClick={this.handleUndo}></i>\n            ) : (\n              <i\n                className=\"fa fa-check greenCheck\"\n                onClick={this.handleComplete}\n              ></i>\n            )}\n          </button>\n        </div>\n        <div\n          className={\n            moment(this.props.dueBy).isAfter(moment())\n              ? \"col-2\"\n              : \"col-2 redText\"\n          }\n        >\n          <p>{moment(this.props.date).format(\"YYYY-MM-DD\")}</p>\n        </div>\n        <div\n          className={\n            moment(this.props.dueBy).isAfter(moment())\n              ? \"col-2\"\n              : \"col-2 redText\"\n          }\n        >\n          <p>Due {moment(this.props.dueBy, \"YYYY-MM-DD\").fromNow()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass AddTask extends React.Component {\n  //initial state\n  state = {\n    newTaskText: \"\",\n    dateSelected: \"\",\n    showModal: false\n  };\n\n  updateTaskText = event => {\n    this.setState({\n      newTaskText: event.target.value\n    });\n  };\n\n  handleClick = () => {\n    if (\n      typeof this.state.newTaskText !== \"string\" ||\n      this.state.newTaskText === \"\"\n    ) {\n      this.setState({\n        showModal: true\n      });\n    } else {\n      this.props.addTaskFunc(this.state.newTaskText, this.state.dateSelected);\n      this.setState({\n        newTaskText: \"\"\n      });\n    }\n  };\n  handleModalDismiss = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n  handleDateChange = e => {\n    this.setState({\n      dateSelected: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row p-2\">\n        <div\n          className={this.state.showModal ? \"modal isVisible\" : \"modal\"}\n          tabIndex=\"-1\"\n          role=\"dialog\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">\n                  Oops, you forgot to add the task content\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={this.handleModalDismiss}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <p>\n                  {\" \"}\n                  Do not let circumstances control you. You change your\n                  circumstances. - JC\n                </p>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={this.handleModalDismiss}\n                >\n                  Ok\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-9 col-md-5\">\n          <input\n            type=\"text\"\n            className=\"form-control addTaskTextArea\"\n            aria-describedby=\"text\"\n            placeholder=\"E.g. take out bins\"\n            value={this.state.newTaskText}\n            onChange={this.updateTaskText}\n          ></input>\n        </div>\n        <div className=\"col-2 col-md-5\">\n          <div className=\"form-group mx-sm-3 mb-2\">\n            <input\n              className=\"form-control\"\n              type=\"date\"\n              onChange={this.handleDateChange}\n              value={this.state.dateSelected}\n            ></input>\n          </div>\n        </div>\n\n        <div className=\"col-1 col-mb-2\">\n          {/* <div className=\"mt-3 mb-3\"> */}\n          <button\n            id=\"addButton\"\n            className=\"btn btn-dark addTaskButton\"\n            onClick={this.handleClick}\n          >\n            <i className=\"fa fa-plus\"> </i>{\" \"}\n          </button>\n          {/* </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddTask;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass OutstandingTasks extends React.Component {\n  render() {\n    return (\n      <div className=\"col-8\">\n        <h4 className=\"rowmargin\">\n          You have <strong>{this.props.count}</strong> tasks:{\" \"}\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default OutstandingTasks;\n","import React from \"react\";\n\nclass Dropdown extends React.Component {\n  state = {\n    showDropdown: false\n  };\n\n  handleSortMenu = () => {\n    if (this.state.showDropdown === false) {\n      this.setState({\n        showDropdown: true\n      });\n    } else {\n      this.setState({\n        showDropdown: false\n      });\n    }\n  };\n\n  handleSortOption = option => {\n    this.props.sortByFunc(option);\n    this.handleSortMenu();\n  };\n\n  render() {\n    let message;\n    if (this.props.sortOption === \"due\") {\n      message = \"Sorted By Date Due\";\n    } else if (this.props.sortOption === \"created\") {\n      message = \"Sorted By Date Created\";\n    } else {\n      message = \"Sort By\";\n    }\n\n    return (\n      <div className=\"col-4\">\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm dropdown-toggle\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            onClick={this.handleSortMenu}\n          >\n            {message}\n          </button>\n          <div\n            className={\n              this.state.showDropdown\n                ? \"dropdown-menu isVisible\"\n                : \"dropdown-menu\"\n            }\n          >\n            <a\n              className=\"dropdown-item\"\n              href=\"#\"\n              onClick={() => this.handleSortOption(\"created\")}\n            >\n              Date Created\n            </a>\n            <a\n              className=\"dropdown-item\"\n              href=\"#\"\n              onClick={() => this.handleSortOption(\"due\")}\n            >\n              Date Due\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport Task from \"./task\";\nimport axios from \"axios\";\nimport AddTask from \"./addTask\";\nimport OutstandingTasks from \"./outstandingTasks\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport Dropdown from \"./dropdown\";\nimport FlipMove from \"react-flip-move\";\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    incompleteSortOption: \"\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://cr5ghnlv41.execute-api.eu-west-2.amazonaws.com/dev/tasks/\")\n      .then(response => {\n        const tasksFromDB = response.data;\n        this.setState({\n          tasks: tasksFromDB.tasks\n        });\n      })\n      .catch(err => {\n        console.log(\"Error getting tasks data\", err);\n      });\n  }\n\n  addTask = (taskText, dueByDate) => {\n    const newTask = {\n      Completed: false,\n      DateCreated: moment().format(\"YYYY-MM-DD\"),\n      DateDue: dueByDate,\n      Text: taskText,\n      UserId: 1\n    };\n\n    console.log(\"from axios addTask \" + newTask.DateCreated);\n    const tasksCopy = this.state.tasks.slice();\n\n    axios\n      .post(\n        \"https://cr5ghnlv41.execute-api.eu-west-2.amazonaws.com/dev/tasks/\",\n        newTask\n      )\n      .then(response => {\n        console.log(response);\n        const taskFromDB = response.data;\n        tasksCopy.push(taskFromDB);\n\n        this.setState({\n          tasks: tasksCopy\n        });\n      })\n      .catch(err => console.log(\"Error creating task\", err));\n\n    //Add that task to the state\n    //never do this.state.tasks.push(item) and access state directly\n  };\n\n  deleteTask = id => {\n    axios\n      .delete(\n        \"https://cr5ghnlv41.execute-api.eu-west-2.amazonaws.com/dev/tasks/\" + id\n      )\n      .then(response => {\n        console.log(response);\n        const tasksNotDel = this.state.tasks.filter(task => {\n          return task.TaskID !== id;\n        });\n        this.setState({\n          tasks: tasksNotDel\n        });\n        console.log(this.state.birthdays);\n      })\n      .catch(err => console.log(\"Error deleting task\", err));\n  };\n\n  editTask = (id, completed) => {\n    const editedTask = {\n      Completed: completed\n    };\n    axios\n      .put(\n        \"https://cr5ghnlv41.execute-api.eu-west-2.amazonaws.com/dev/tasks/\" +\n          id,\n        editedTask\n      )\n      .then(response => {\n        const updatedtasks = this.state.tasks.map(task => {\n          // console.log(response);\n          if (task.TaskID === id) {\n            task.Completed = completed;\n          }\n          return task;\n        });\n        this.setState({\n          tasks: updatedtasks\n        });\n      })\n      .catch(err => console.log(\"Error editing task\", err));\n  };\n\n  completeTask = id => {\n    const updatedTasks = this.state.tasks.map(task => {\n      if (task.TaskID === id) {\n        task.Completed = true;\n        this.editTask(task.TaskID, task.Completed);\n      }\n\n      return task;\n    });\n\n    this.setState({\n      tasks: updatedTasks\n    });\n  };\n\n  undoTask = id => {\n    const updatedTasks = this.state.tasks.map(task => {\n      if (task.TaskID === id) {\n        task.Completed = false;\n      }\n\n      return task;\n    });\n\n    this.setState({\n      tasks: updatedTasks\n    });\n  };\n\n  countTasksCompleted = task => {\n    let count = 0;\n    if (task.completed === true) {\n      count++;\n    }\n    return count;\n  };\n\n  sortBy = option => {\n    const updatedTasks = this.state.tasks.sort(function(a, b) {\n      if (option === \"created\") {\n        return a.DateCreated < b.DateCreated ? -1 : 1;\n      } else if (option === \"due\") {\n        return a.DateDue < b.DateDue ? -1 : 1;\n      }\n    });\n    this.setState({\n      tasks: updatedTasks\n    });\n  };\n\n  // toggleListSort = tasks => {\n  //   let taskList = [];\n  //   if(let i = 0; i < tasks.length; i++){\n  //     if (tasks[i].date)\n  //   }\n  // };\n\n  render() {\n    console.log(this.state.tasks);\n    const completedTasks = this.state.tasks.filter(task => {\n      return task.Completed === true;\n    });\n\n    const incompleteTasks = this.state.tasks.filter(task => {\n      return task.Completed ? false : true;\n    });\n\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>\n            <span className=\"h1Letter\">To Do </span>\n            <span className=\"list\">\n              <u>List</u>\n            </span>\n          </h1>\n          <h6>\n            Don't try to be like Jackie. There is only one Jackie. Study\n            computers instead.\n          </h6>\n        </header>\n        <br className=\"grey\"></br>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <br className=\"grey\"></br>\n\n            <AddTask addTaskFunc={this.addTask} />\n          </div>\n        </div>\n        <div className=\"row p-2\">\n          <OutstandingTasks count={this.state.tasks.length} />\n          <Dropdown\n            sortByFunc={this.sortBy}\n            sortOption={this.state.incompleteSortOption}\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <FlipMove\n              duration={250}\n              easing=\"ease-out\"\n              enterAnimation={{\n                from: {\n                  duration: 1050,\n                  transform: \"rotateY(180deg)\",\n                  opacity: 0.1\n                },\n                to: {\n                  transform: \"\"\n                }\n              }}\n              leaveAnimation={{\n                from: {\n                  transform: \"\"\n                },\n                to: {\n                  duration: 1050,\n                  transform: \"rotateY(-120deg)\",\n                  opacity: 0.1\n                }\n              }}\n            >\n              {incompleteTasks.map(task => {\n                return (\n                  <Task\n                    text={task.Text}\n                    completed={task.Completed}\n                    key={task.TaskID}\n                    deleteTaskFunc={this.deleteTask}\n                    completedTaskFunc={this.completeTask}\n                    id={task.TaskID}\n                    date={task.DateCreated}\n                    dueBy={task.DateDue}\n                  />\n                );\n              })}\n            </FlipMove>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <br className=\"grey\"></br>\n            <br className=\"grey\"></br>\n            <FlipMove duration={250} easing=\"ease-out\">\n              {completedTasks.map(task => {\n                return (\n                  <Task\n                    text={task.Text}\n                    completed={task.Completed}\n                    key={task.TaskID}\n                    deleteTaskFunc={this.deleteTask}\n                    undoTaskFunc={this.undoTask}\n                    id={task.TaskID}\n                    date={task.DateCreated}\n                    dueBy={task.DateDue}\n                  />\n                );\n              })}\n            </FlipMove>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// \"TaskID\": 2,\n//             \"Completed\": 1,\n//             \"DateCreated\": \"2019-06-21T00:00:00.000Z\",\n//             \"DateDue\": \"2019-11-28T00:00:00.000Z\",\n//             \"Text\": \"Karate chop plank of wood\",\n//             \"UserID\": 2\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}